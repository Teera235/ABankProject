import cv2
import numpy as np
import pyautogui
import time
from PIL import Image

# ‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≤‡∏ò‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
image_path = r"C:\Users\teerathap\Downloads\‡∏™‡∏Å‡∏£‡∏µ‡∏ô‡∏ä‡πá‡∏≠‡∏ï 2025-07-04 155115.png"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
try:
    img = Image.open(image_path)
    img.show()  # ‡πÄ‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏ô viewer
    print("‚úÖ Image loaded successfully with Pillow.")
except Exception as e:
    print(f"‚ùå Error loading image: {e}")
    exit()  # ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°

# ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢ Pillow ‡πÄ‡∏õ‡πá‡∏ô NumPy array ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏î‡πâ‡∏ß‡∏¢ OpenCV
img = np.array(img.convert('L'))  # ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô grayscale

# Resize ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
img = cv2.resize(img, (300, 300))

# ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡∏≠‡∏ö
edges = cv2.Canny(img, 100, 200)

# ‡∏´‡∏≤‡πÄ‡∏™‡πâ‡∏ô contour
contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û preview
preview = np.zeros_like(img)
cv2.drawContours(preview, contours, -1, (255, 255, 255), 1)

# ‡πÅ‡∏™‡∏î‡∏á preview ‡πÉ‡∏´‡πâ‡∏ò‡∏µ‡∏î‡∏π
cv2.imshow("üß† Preview ‚Äì ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ß‡∏≤‡∏î", preview)
print("üîé ‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡∏≤‡∏î | ‡∏Å‡∏î Q ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")

while True:
    key = cv2.waitKey(100) & 0xFF  # ‡∏£‡∏≠ 100 ms ‡∏£‡∏±‡∏ö keycode
    if key == ord('q'):
        print("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î")
        cv2.destroyAllWindows()
        exit()
    elif key == 13:  # Enter key
        break

cv2.destroyAllWindows()
print("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß... ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏î‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
time.sleep(5)

# ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏î)
start_x, start_y = 500, 300

# ‡∏ß‡∏≤‡∏î‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏ï‡∏≤‡∏° contour
for contour in contours:
    first = True
    for point in contour[::5]:  # ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏à‡∏∏‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î
        x = start_x + point[0][0]
        y = start_y + point[0][1]
        if first:
            pyautogui.moveTo(x, y)
            pyautogui.mouseDown()
            first = False
        else:
            pyautogui.moveTo(x, y, duration=0.01)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏∏‡πà‡∏°‡∏ô‡∏ß‡∏•‡∏Ç‡∏∂‡πâ‡∏ô
    pyautogui.mouseUp()
